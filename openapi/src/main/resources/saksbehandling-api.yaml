openapi: 3.0.3
info:
  title: Saksbehandling API
  version: 1.0.0
  description: Et API for å administrere oppgaver og deres tilstandsoverganger.
servers:
  - url: https://dp-saksbehandling.intern.dev.nav.no
    description: dev
  - url: https://dp-saksbehandling # Service discovery internt i clusteret
    description: prod
paths:
  /oppgave:
    get:
      summary: Hent alle oppgaver med status Klar til behandling
      parameters:
        - in: query
          name: emneknagg
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: tilstand
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OppgaveTilstand'
        - in: query
          name: fom
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: tom
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: mineOppgaver
          required: false
          schema:
            type: boolean
        - in: query
          name: antallOppgaver
          required: false
          schema:
            type: integer
            default: 50
        - in: query
          name: side
          required: false
          schema:
            type: integer
            default: 0


      responses:
        '200':
          description: Vellykket respons med en liste over oppgaver
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OppgaveOversikt'
  /oppgave/neste:
    put:
      summary: Hent neste oppgave og tildel denne til saksbehandler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NesteOppgave'

      responses:
        '200':
          description: Vellykket respons med detaljer om oppgaven som tildeles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oppgave'
        '404':
          description: Ingen flere oppgaver å behandle akkurat nå
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /oppgave/{oppgaveId}:
    get:
      summary: Hent en oppgave ved hjelp av dens ID
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Vellykket respons med detaljer om oppgaven
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oppgave'
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /oppgave/{oppgaveId}/notat:
    put:
      summary: Legg til et notat på en oppgave
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notat'
      responses:
        '200':
          description: Notatet ble lagt til
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagreNotatResponse'
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'

  /oppgave/{oppgaveId}/send-til-kontroll:
    put:
      summary: Saksbehandler sender oppgaven til kontroll og innstiller vedtaket
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid

      responses:
        '204':
          description: Vellykket respons
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
        '409':
          description: Oppgaven er allerede sendt til kontroll eller den krever ikke kontroll.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'

  /oppgave/{oppgaveId}/returner-til-saksbehandler:
    put:
      summary: Beslutter sender oppgaven tilbake til saksbehandler
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid

      responses:
        '204':
          description: Vellykket respons
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
        '409':
          description: Oppgaven er allerede sendt tilbake til saksbehandler
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'

  /oppgave/{oppgaveId}/ferdigstill/melding-om-vedtak:
    put:
      summary: Ferdigstill en Oppgave ved å godkjenne behandlingen og starte utsending.
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          text/html:
            schema:
              type: string
              description: Melding om vedtak i HTML-format
      responses:
        '204':
          description: Oppgaven er ferdig behandlet og utsending av melding om vedtak har startet
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
        '415':
          description: Unsupported Media Type - Innholdstypen må være text/html
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /oppgave/{oppgaveId}/ferdigstill/melding-om-vedtak-arena:
    put:
      summary: Ferdigstill en Oppgave ved å la arena lage melding om vedtak.
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Oppgaven er ferdig behandlet og utsending av melding om vedtak håndteres i Arena
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /oppgave/{oppgaveId}/utsett:
    put:
      summary: Saksbehandler utsetter oppgaven
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtsettOppgave'

      responses:
        '200':
          description: Vellykket respons
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
        '409':
          description: Oppgaven er allerede tatt til behandling
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /oppgave/{oppgaveId}/tildel:
    put:
      summary: Saksbehandler blir tildelt ansvaret for oppgaven
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Returnerer oppdatert tilstand etter tildeling av oppgave til saksbehandler eller beslutter
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OppgaveTilstand'
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
        '409':
          description: Oppgaven er allerede tatt til behandling
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /oppgave/{oppgaveId}/legg-tilbake:
    put:
      summary: Saksbehandler/beslutter fjernes som ansvarlig for oppgaven, og oppgaven går tilbake til oppgavelisten
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Fjernet saksbehandler/beslutter som ansvarlig for oppgaven, og oppgaven gjøres klar til behandling/kontroll
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
        '409':
          description: Oppgaven kan ikke legges tilbake i oppgavelisten igjen
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /person/oppgaver:
    post:
      summary: Hent alle oppgaver til en person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonIdent'
      responses:
        '200':
          description: Vellykket respons med en liste over oppgaver som samsvarer med ident
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OppgaveOversikt'
  /behandling/{behandlingId}/oppgaveId:
    get:
      summary: Henter oppgaveId basert på en behandlingId
      parameters:
        - in: path
          name: behandlingId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Fant oppgaveId for behandlingId
          content:
            text/plain:
              schema:
                type: string
                format: uuid
        '404':
          description: Fant ikke oppgaveId for behandlingId
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /statistikk:
    get:
      summary: Hent statistikk
      description: Henter statistikk for innlogget saksbehandler.
      responses:
        '200':
          description: Statistikk hentet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistikk'
        '401':
          description: Uautorisert tilgang
components:
  schemas:
    Person:
      type: object
      properties:
        ident:
          type: string
        fornavn:
          type: string
        etternavn:
          type: string
        mellomnavn:
          type: string
        fodselsdato:
          type: string
          format: date
        alder:
          type: integer
        statsborgerskap:
          type: string
        kjonn:
          $ref: '#/components/schemas/Kjonn'
        skjermesSomEgneAnsatte:
          type: boolean
        adressebeskyttelseGradering:
          $ref: '#/components/schemas/AdressebeskyttelseGradering'
      required:
        - ident
        - fornavn
        - etternavn
        - fodselsdato
        - alder
        - kjonn
        - skjermesSomEgneAnsatte
        - adressebeskyttelseGradering



    OppgaveOversikt:
      type: object
      properties:
        oppgaveId:
          type: string
          format: uuid
        behandlingId:
          type: string
          format: uuid
        personIdent:
          type: string
        saksbehandlerIdent:
          type: string
        behandlerIdent:
          type: string
        tidspunktOpprettet:
          type: string
          format: date-time
        emneknagger:
          type: array
          items:
            type: string
        skjermesSomEgneAnsatte:
          type: boolean
        adressebeskyttelseGradering:
          $ref: '#/components/schemas/AdressebeskyttelseGradering'
        tilstand:
          $ref: '#/components/schemas/OppgaveTilstand'
        utsattTilDato:
          type: string
          format: date
      required:
        - oppgaveId
        - behandlingId
        - personIdent
        - tidspunktOpprettet
        - tilstand
        - emneknagger
        - adressebeskyttelseGradering
        - skjermesSomEgneAnsatte

    Oppgave:
      type: object
      properties:
        oppgaveId:
          type: string
          format: uuid
        behandlingId:
          type: string
          format: uuid
        saksbehandler:
          $ref: '#/components/schemas/Behandler'
        beslutter:
          $ref: '#/components/schemas/Behandler'
        person:
          $ref: '#/components/schemas/Person'
        tidspunktOpprettet:
          type: string
          format: date-time
        utsattTilDato:
          type: string
          format: date
        journalpostIder:
          type: array
          items:
            type: string
        historikk:
          type: array
          items:
             $ref: '#/components/schemas/OppgaveHistorikk'
        emneknagger:
          type: array
          items:
            type: string
        tilstand:
          $ref: '#/components/schemas/OppgaveTilstand'
        notat:
          $ref: '#/components/schemas/Notat'
      required:
        - oppgaveId
        - behandlingId
        - person
        - tidspunktOpprettet
        - tilstand
        - emneknagger

    Kjonn:
      type: string
      enum:
        - MANN
        - KVINNE
        - UKJENT

    OppgaveTilstand:
      type: string
      enum:
        - KLAR_TIL_BEHANDLING
        - UNDER_BEHANDLING
        - KLAR_TIL_KONTROLL
        - UNDER_KONTROLL
        - FERDIG_BEHANDLET
        - PAA_VENT
        - AVVENTER_LÅS_AV_BEHANDLING
        - AVVENTER_OPPLÅSING_AV_BEHANDLING
        - BEHANDLES_I_ARENA

    AdressebeskyttelseGradering:
      type: string
      enum:
        - UGRADERT
        - FORTROLIG
        - STRENGT_FORTROLIG
        - STRENGT_FORTROLIG_UTLAND

    PersonIdent:
      type: object
      properties:
        ident:
          type: string
      required:
        - ident

    OppgaveHistorikk:
      type: object
      properties:
        type:
          type: string
          enum:
            - notat
            - statusendring
        tidspunkt:
          type: string
          format: date-time
        tittel:
         type: string
        behandler:
          type: object
          properties:
            navn:
              type: string
            rolle:
              type: string
              enum:
                - saksbehandler
                - beslutter
                - system
          required:
            - navn
        body:
          type: string
      required:
        - type
        - tidspunkt
        - tittel
        - behandler

    NesteOppgave:
      type: object
      properties:
        queryParams:
          type: string
      required:
        - queryParams

    UtsettOppgave:
      type: object
      properties:
        utsettTilDato:
          type: string
          format: date
        beholdOppgave:
          type: boolean
      required:
        - utsettTilDato
        - beholdOppgave

    LagreNotatResponse:
      type: object
      properties:
        sistEndretTidspunkt:
          type: string
          format: date-time
          description: Tidspunkt notat sist ble endret
      required:
        - sistEndretTidspunkt
    Notat:
      type: object
      properties:
        tekst:
          type: string
        sistEndretTidspunkt:
          type: string
          format: date-time
          description: Tidspunkt notat sist ble endret
      required:
        - tekst
        - sistEndretTidspunkt
    Behandler:
      type: object
      properties:
        ident:
          type: string
        fornavn:
          type: string
        etternavn:
          type: string
        enhet:
          type: object
          properties:
            navn:
              type: string
            enhetNr:
              type: string
            postadresse:
              type: string
          required:
            - navn
            - enhetNr
            - postadresse
      required:
        - ident
        - fornavn
        - etternavn

    Statistikk:
      type: object
      properties:
        dag:
          type: integer
          default: 0
          description: Antall behandlede oppgaver i løpet av dagen.
          example: 5
        uke:
          type: integer
          default: 0
          description: Antall behandlede oppgaver i løpet av uken.
          example: 30
        totalt:
          type: integer
          default: 0
          description: Totalt antall behandlede oppgaver.
          example: 200

    HttpProblem:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
