openapi: 3.0.3
info:
  title: Saksbehandling API
  version: 1.0.0
  description: Et API for å administrere oppgaver og deres tilstandsoverganger.
servers:
  - url: https://dp-saksbehandling.intern.dev.nav.no
    description: dev
  - url: https://dp-saksbehandling # Service discovery internt i clusteret
    description: prod
paths:
  /oppgave:
    get:
      summary: Hent alle oppgaver med status Klar til behandling
      parameters:
        - in: query
          name: emneknagg
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: tilstand
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OppgaveTilstand'
        - in: query
          name: fom
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: tom
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: mineOppgaver
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Vellykket respons med en liste over oppgaver
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OppgaveOversikt'
  /oppgave/neste:
    put:
      summary: Hent neste oppgave og tildel denne til saksbehandler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NesteOppgave'

      responses:
        '200':
          description: Vellykket respons med detaljer om oppgaven som tildeles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oppgave'
        '404':
          description: Ingen flere oppgaver å behandle akkurat nå
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'


  /oppgave/{oppgaveId}/send-brev:
    post:
      summary: Mottar brev som HTML for utsending
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          text/html:
            schema:
              type: string
              description: Brevet i HTML-format
      responses:
        '202':
          description: Mottatt brev
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /oppgave/{oppgaveId}:
    get:
      summary: Hent en oppgave ved hjelp av dens ID
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Vellykket respons med detaljer om oppgaven
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oppgave'
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'

  /oppgave/{oppgaveId}/utsett:
    put:
      summary: Saksbehandler blir tildelt ansvaret for oppgaven
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtsettOppgave'

      responses:
        '200':
          description: Vellykket respons
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
        '409':
          description: Oppgaven er allerede tatt til behandling
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /oppgave/{oppgaveId}/tildel:
    put:
      summary: Saksbehandler blir tildelt ansvaret for oppgaven
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Vellykket respons med detaljer om oppgaven
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oppgave'
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
        '409':
          description: Oppgaven er allerede tatt til behandling
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /oppgave/{oppgaveId}/legg-tilbake:
    put:
      summary: Saksbehandler fjernes som ansvarlig for oppgaven, og oppgaven går tilbake til oppgavelisten
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Fjernet saksbehandler som ansvarlig for oppgaven, og oppgaven gjøres klar til behandling
        '404':
          description: Oppgaven ble ikke funnet
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
        '409':
          description: Oppgaven kan ikke settes klar til behandling igjen
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'
  /person/oppgaver:
    post:
      summary: Hent alle oppgaver til en person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonIdent'
      responses:
        '200':
          description: Vellykket respons med en liste over oppgaver som samsvarer med ident
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OppgaveOversikt'
  /behandling/{behandlingId}/oppgaveId:
    get:
      summary: Henter oppgaveId basert på en behandlingId
      parameters:
        - in: path
          name: behandlingId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Fant oppgaveId for behandlingId
          content:
            text/plain:
              schema:
                type: string
                format: uuid
        '404':
          description: Fant ikke oppgaveId for behandlingId
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpProblem'

components:
  schemas:
    Person:
      type: object
      properties:
        ident:
          type: string
        fornavn:
          type: string
        etternavn:
          type: string
        mellomnavn:
          type: string
        fodselsdato:
          type: date
        alder:
          type: integer
        statsborgerskap:
          type: string
        kjonn:
          $ref: '#/components/schemas/Kjonn'
      required:
        - ident
        - fornavn
        - etternavn
        - fodselsdato
        - alder
        - kjonn

    OppgaveOversikt:
      type: object
      properties:
        oppgaveId:
          type: string
          format: uuid
        behandlingId:
          type: string
          format: uuid
        personIdent:
          type: string
        saksbehandlerIdent:
          type: string
        tidspunktOpprettet:
          type: string
          format: date-time
        emneknagger:
          type: array
          items:
            type: string
        tilstand:
          $ref: '#/components/schemas/OppgaveTilstand'
      required:
        - oppgaveId
        - behandlingId
        - personIdent
        - tidspunktOpprettet
        - tilstand
        - emneknagger

    Oppgave:
      type: object
      properties:
        oppgaveId:
          type: string
          format: uuid
        behandlingId:
          type: string
          format: uuid
        personIdent:
          type: string
        saksbehandlerIdent:
          type: string
        person:
          $ref: '#/components/schemas/Person'
        tidspunktOpprettet:
          type: string
          format: date-time
        utsattTilDato:
          type: string
          format: date
        journalpostIder:
          type: array
          items:
            type: string
        emneknagger:
          type: array
          items:
            type: string
        tilstand:
          $ref: '#/components/schemas/OppgaveTilstand'
      required:
        - oppgaveId
        - behandlingId
        - personIdent
        - person
        - tidspunktOpprettet
        - tilstand
        - emneknagger

    Kjonn:
      type: string
      enum:
        - MANN
        - KVINNE
        - UKJENT

    OppgaveTilstand:
      type: string
      enum:
        - KLAR_TIL_BEHANDLING
        - UNDER_BEHANDLING
        - FERDIG_BEHANDLET
        - PAA_VENT

    PersonIdent:
      type: object
      properties:
        ident:
          type: string
      required:
        - ident

    NesteOppgave:
      type: object
      properties:
        queryParams:
          type: string
      required:
        - queryParams

    UtsettOppgave:
      type: object
      properties:
        utsettTilDato:
          type: string
          format: date
        beholdOppgave:
          type: boolean
      required:
        - utsettTilDato
        - beholdOppgave
    HttpProblem:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
