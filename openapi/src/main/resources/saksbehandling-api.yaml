openapi: 3.0.3
info:
  title: Saksbehandling API
  version: 1.0.0
  description: Et API for å administrere oppgaver og deres tilstandsoverganger.
servers:
  - url: https://dp-saksbehandling.intern.dev.nav.no
    description: dev
  - url: https://dp-saksbehandling # Service discovery internt i clusteret
    description: prod
paths:
  /oppgave:
    get:
      summary: Hent alle oppgaver
      responses:
        '200':
          description: Vellykket respons med en liste over oppgaver
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Oppgave'
  /oppgave/sok:
    post:
      summary: Søk etter oppgaver ved hjelp av fødselsnummer (FNR)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sok'
      responses:
        '200':
          description: Vellykket respons med en liste over oppgaver som samsvarer med FNR-en
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Oppgave'
  /oppgave/{oppgaveId}:
    get:
      summary: Hent en oppgave ved hjelp av dens ID
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Vellykket respons med detaljer om oppgaven
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oppgave'
        '404':
          description: Oppgaven ble ikke funnet

    put:
      summary: Besvar opplysninger i en oppgave.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opplysninger'
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Vellykket oppdatering av opplysninger i en oppgave
        '400':
          description: Kunne ikke lagre opplysninger.
        '404':
          description: Oppgaven ble ikke funnet

  /oppgave/{oppgaveId}/avslag:
    put:
      summary: Avslå søknad om dagpenger. Fungerer kun for avslag på minsteinntekt.
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Vellykket respons
        '404':
          description: Oppgaven ble ikke funnet

  /oppgave/{oppgaveId}/lukk:
    put:
      summary: Lukk en oppgave ved hjelp av dens ID
      parameters:
        - in: path
          name: oppgaveId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Vellykket respons
        '404':
          description: Oppgaven ble ikke funnet

components:
  schemas:
    Person:
      type: object
      properties:
        ident:
          type: string
        fornavn:
          type: string
        etternavn:
          type: string
        mellomnavn:
          type: string
      required:
        - ident
        - fornavn
        - etternavn
    Oppgave:
      type: object
      properties:
        oppgaveId:
          type: string
          format: uuid
        behandling:
          type: object
          additionalProperties: true
        behandlingId:
          type: string
          format: uuid
        personIdent:
          type: string
        person:
          $ref: '#/components/schemas/Person'
        tidspunktOpprettet:
          type: string
          format: date-time
        journalpostIder:
          type: array
          items:
            type: string
        emneknagger:
          type: array
          items:
            type: string
        tilstand:
          $ref: '#/components/schemas/OppgaveTilstand'
        steg:
          type: array
          items:
            $ref: '#/components/schemas/Steg'
      required:
        - oppgaveId
        - behandling
        - behandlingId
        - personIdent
        - person
        - tidspunktOpprettet
        - tilstand
        - steg
        - emneknagger
    OppgaveTilstand:
      type: string
      enum:
        - OPPRETTET
        - KLAR_TIL_BEHANDLING
        - FERDIG_BEHANDLET

    Steg:
      type: object
      properties:
        beskrivendeId:
          type: string
        opplysninger:
          $ref: '#/components/schemas/Opplysninger'
        tilstand:
          $ref: '#/components/schemas/StegTilstand'
      required:
        - beskrivendeId
        - opplysninger

    Opplysninger:
      type: array
      items:
        $ref: '#/components/schemas/Opplysning'

    Opplysning:
      type: object
      properties:
        opplysningNavn:
          type: string
        status:
          $ref: '#/components/schemas/OpplysningStatus'
        dataType:
          $ref: '#/components/schemas/DataType'
        svar:
          $ref: '#/components/schemas/Svar'
        redigerbar:
          type: boolean
      required:
        - opplysningNavn
        - status
        - dataType
        - redigerbar
    Svar:
      type: object
      properties:
        verdi:
          type: string
          nullable: false
    DataType:
      type: string
      enum:
        - STRING
        - LOCALDATE
        - INT
        - BOOLEAN
        - DOUBLE
    OpplysningStatus:
      type: string
      enum:
        - HYPOTESE
        - FAKTUM
    Sok:
      type: object
      properties:
        fnr:
          type: string
      required:
        - fnr
    StegTilstand:
      type: string
      enum:
        - OPPFYLT
        - IKKE_OPPFYLT
        - MANUELL_BEHANDLING
